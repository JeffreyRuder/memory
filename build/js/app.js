!function r(e,o,i){function t(s,a){if(!o[s]){if(!e[s]){var p="function"==typeof require&&require;if(!a&&p)return p(s,!0);if(n)return n(s,!0);var u=new Error("Cannot find module '"+s+"'");throw u.code="MODULE_NOT_FOUND",u}var c=o[s]={exports:{}};e[s][0].call(c.exports,function(r){var o=e[s][1][r];return t(o?o:r)},c,c.exports,r,e,o,i)}return o[s].exports}for(var n="function"==typeof require&&require,s=0;s<i.length;s++)t(i[s]);return t}({1:[function(r,e,o){var i=function(r,e){this.xCoordinate=r,this.yCoordinate=e,this.flipped=!1,this.pic=""};i.prototype.flipAndCheck=function(r){return this.flipped=!0,r.flipped=!0,this.pic!==r.pic?(this.flipped=!1,r.flipped=!1,!1):!0};var t=function(r,e){this.rows=r,this.columns=e,this.spaces=[],this.turnsTaken=0,this.isOver=!1,this.winMessage="You've found all the matches!"};t.prototype.setupBoard=function(){if(this.columns%2===0&&this.rows%2===0)for(var r=1;r<=this.columns;r++)for(var e=1;e<=this.rows;e++){var o=new i(r,e);this.spaces.push(o)}else console.log("Error, board dimensions must be even!")},t.prototype.getSpace=function(r,e){return this.spaces.find(function(o){return o.xCoordinate===r&&o.yCoordinate===e})},o.Space=i,o.Game=t},{}],2:[function(r,e,o){var i=r("./../js/memory.js").Game;r("./../js/memory.js").Space;$(document).ready(function(){var r=new i(4,4);r.setupBoard();for(var e=1;e<=r.rows;e++){$(".game-grid").append("<div class='row' id='row"+e+"'></div>");for(var o=1;o<=r.columns;o++)$("#row"+e).append("<div class='cell col-sm-2' id='"+e+"_"+o+"'></div>")}})},{"./../js/memory.js":1}]},{},[2]);